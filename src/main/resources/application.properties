# ===============================
# = Server
# ===============================

#Server HTTP port.
server.port=8080


# ===============================
# = Spring MVC
# ===============================

# Spring MVC view prefix.
spring.mvc.view.prefix=/WEB-INF/views/

# Spring MVC view suffix.
spring.mvc.view.suffix= .jsp

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/portal
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.javax.persistence.validation.mode = none

#spring.datasource.url=jdbc:mariadb://localhost:3306/jobku
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=none
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#spring.datasource.url=jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=none
#spring.h2.console.enabled=true
